{"version":3,"sources":["components/LinkMenuItem.js","components/Navigation.js","pages/aboutMe.js","pages/landing.js","components/PriceEstimator.js","components/GoogleMapsAutoComplete.js","pages/gasMoney.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["withRouter","props","history","to","location","match","staticContext","onClick","rest","MenuItem","event","push","Navigation","handleMenu","setState","anchorElement","currentTarget","isNavOpen","handleClose","handleNav","page","state","classes","this","className","root","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","open","onClose","Typography","variant","title","React","Component","withStyles","theme","flexGrow","marginRight","spacing","Landing","PriceEstimator","directionsCallback","newResponse","console","log","status","response","AfterDirectionFetch","from","directions","routes","legs","distance","text","duration","id","googleMapsApiKey","libraries","center","lat","lng","zoom","mapContainerStyle","width","height","options","destination","origin","travelMode","callback","GoogleMapsAutoComplete","updateOptions","a","async","placeToSearch","inputValue","requestUrl","encodeURI","headers","Headers","mode","fetch","rawData","json","data","handleChange","target","value","Autocomplete","style","getOptionLabel","option","description","filterOptions","x","autoComplete","includeInputInList","freeSolo","disableOpenOnFocus","renderInput","params","TextField","label","fullWidth","onChange","throttle","renderOption","matches","structured_formatting","main_text_matched_substrings","parts","parse","main_text","map","offset","length","Grid","container","alignItems","item","xs","part","index","key","fontWeight","highlight","secondary_text","GasMoney","getLocation","navigator","geolocation","getCurrentPosition","calculatePrice","updateMap","afterDirections","cost","showMap","Paper","Input","placeholder","Button","App","exact","path","component","aboutMe","Boolean","window","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.51522b4e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst LinkMenuItem = (props) => {\r\n    const {\r\n    history,\r\n    location,\r\n    match,\r\n    staticContext,\r\n    to,\r\n    onClick,\r\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\r\n    ...rest\r\n  } = props\r\n  return (\r\n      <MenuItem {...rest} onClick={(event) => {\r\n      onClick && onClick(event)\r\n      history.push(to)\r\n  }} />\r\n  )\r\n}\r\n\r\nLinkMenuItem.propTypes = {\r\n    to: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default withRouter(LinkMenuItem)","//@flow\r\n\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport LinkMenuItem from './LinkMenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\ntype State = {\r\n    isNavOpen: boolean,\r\n    anchorElement: string | any,\r\n}\r\n\r\ntype Props = {\r\n    classes?: any,\r\n    history: Array<any>,\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nclass Navigation extends React.Component<Props, State> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            anchorElement: null,\r\n        };\r\n    }\r\n    handleMenu = (event) => {\r\n        this.setState({anchorElement: event.currentTarget, isNavOpen: true});\r\n    }\r\n    handleClose = () => {\r\n        this.setState({anchorElement: null, isNavOpen: false});\r\n    }\r\n    handleNav = (page) => {\r\n        //this.props.history.push(page);\r\n        //this.setState({anchorElement: null, isNavOpen: false});\r\n    }\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {isNavOpen, anchorElement} = this.state;\r\n        return (\r\n            <div className={classes?.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar >\r\n                        <IconButton edge=\"start\"  onClick={this.handleMenu} className={classes?.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Menu anchorEl={anchorElement} anchorOrigin={{vertical: 'top', horizontal: 'right'}} keepMounted open={isNavOpen} onClose={this.handleClose}>\r\n                        <LinkMenuItem to=\"/Projects\" onClick={this.handleClose}>Projects</LinkMenuItem>\r\n                        <LinkMenuItem to=\"/Gas\" onClick={this.handleClose}>Gas Money</LinkMenuItem>\r\n                        <LinkMenuItem to=\"/About\" onClick={this.handleClose}>About Me</LinkMenuItem>\r\n                        <LinkMenuItem to=\"/Resume\" onClick={this.handleClose}>Resume</LinkMenuItem>\r\n                        <LinkMenuItem to=\"/\" onClick={this.handleClose}>Home</LinkMenuItem>\r\n                        </Menu>\r\n                        <Typography variant=\"h6\" className={classes?.title}>\r\n                            Elijah Kaufman's Website\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Navigation);","//@flow\r\n\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\ntype State = {\r\n}\r\n\r\ntype Props = {\r\n}\r\n\r\nexport default class Landing extends React.Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        };\r\n    }\r\n    render() {\r\n        //const {classes} = this.props;\r\n        //const {isNavOpen, anchorElement} = this.state;\r\n        return (\r\n            <Typography>About Me</Typography>\r\n        );\r\n    }\r\n}\r\n","//@flow\r\n\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\ntype State = {\r\n}\r\n\r\ntype Props = {\r\n}\r\n\r\nexport default class Landing extends React.Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        };\r\n    }\r\n    render() {\r\n        //const {classes} = this.props;\r\n        //const {isNavOpen, anchorElement} = this.state;\r\n        return (\r\n            <Typography>Welcome to the landing page</Typography>\r\n        );\r\n    }\r\n}\r\n","//@flow\r\n\r\nimport React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  LoadScript,\r\n  DirectionsService,\r\n  DirectionsRenderer\r\n} from \"@react-google-maps/api\";\r\n\r\n//{`Miles: ${(directions.routes['0'].legs[0].distance.value / 1000 * 0.621371).toFixed(2)}`}\r\n//{`Time: ${(directions.routes['0'].legs[0].duration.value / 60).toFixed(2)}`}\r\n\r\ntype State = {\r\n  response: any\r\n};\r\ntype Props = {\r\n  to: string,\r\n  from: string,\r\n  AfterDirectionFetch: () => void\r\n};\r\n\r\nclass PriceEstimator extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      response: null\r\n    };\r\n  }\r\n  directionsCallback = (newResponse: any) => {\r\n    console.log(newResponse);\r\n\r\n    if (newResponse !== null) {\r\n      if (newResponse.status === \"OK\") {\r\n        this.setState({ response: newResponse });\r\n      } else {\r\n        console.log(\"response: \", newResponse);\r\n      }\r\n    }\r\n    this.props.AfterDirectionFetch();\r\n  };\r\n  render() {\r\n    const { from, to } = this.props;\r\n    const directions = this.state.response;\r\n\r\n    return (\r\n      <>\r\n        {directions && (\r\n          <>\r\n            <p>{`Miles: ${directions.routes[\"0\"].legs[0].distance.text}`}</p>\r\n            <p>{`Time: ${directions.routes[\"0\"].legs[0].duration.text}`}</p>\r\n          </>\r\n        )}\r\n        <LoadScript\r\n          id=\"script-loader\"\r\n          googleMapsApiKey=\"AIzaSyCmFG2_lNsVip681FctETIpGuqiFnABTCc\"\r\n          libraries={[\"places\"]}\r\n        >\r\n          <GoogleMap\r\n            id=\"ElyGasMoney\"\r\n            center={{\r\n              lat: -34.397,\r\n              lng: 150.644\r\n            }}\r\n            zoom={8}\r\n            mapContainerStyle={{ width: \"100%\", height: \"400px\" }}\r\n          >\r\n            {from !== \"\" && to !== \"\" && (\r\n              <DirectionsService\r\n                options={{\r\n                  destination: to,\r\n                  origin: from,\r\n                  travelMode: \"DRIVING\"\r\n                }}\r\n                callback={this.directionsCallback}\r\n              />\r\n            )}\r\n            {directions !== null && (\r\n              <DirectionsRenderer\r\n                options={{\r\n                  directions: directions\r\n                }}\r\n              />\r\n            )}\r\n          </GoogleMap>\r\n        </LoadScript>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PriceEstimator;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n  GoogleMap,\r\n  StandaloneSearchBox,\r\n  LoadScript\r\n} from \"@react-google-maps/api\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport throttle from \"lodash/throttle\";\r\n\r\ntype Props = {};\r\ntype State = {\r\n  inputValue: string,\r\n  options: array<any>\r\n};\r\n\r\nexport default class GoogleMapsAutoComplete extends React.Component<\r\n  Props,\r\n  State\r\n> {\r\n  center = {\r\n    lat: 38.685,\r\n    lng: -115.234\r\n  };\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      inputValue: \"\",\r\n      options: []\r\n    };\r\n  }\r\n\r\n  updateOptions = async () => {\r\n    const placeToSearch = this.state.inputValue;\r\n    const requestUrl = `https://cors-anywhere.herokuapp.com/maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURI(\r\n      placeToSearch\r\n    )}&key=AIzaSyCmFG2_lNsVip681FctETIpGuqiFnABTCc`;\r\n\r\n    const options = {\r\n      headers: new Headers({ \"content-type\": \"application/json\" }),\r\n      mode: \"no-cors\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Credentials\": true,\r\n    };\r\n    let rawData = await fetch(requestUrl, options);\r\n    let data = await rawData.json();\r\n\r\n    console.log(data);\r\n    //this.setState({options: data})\r\n  };\r\n  handleChange = event => {\r\n    this.setState({ inputValue: event.target.value }, this.updateOptions);\r\n  };\r\n\r\n  //googleMapsApiKey=\"AIzaSyCmFG2_lNsVip681FctETIpGuqiFnABTCc\"\r\n  render() {\r\n    const { inputValue, options } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <p>{`${inputValue}`}</p>\r\n        <Autocomplete\r\n          id=\"google-map-demo\"\r\n          style={{ width: 300 }}\r\n          getOptionLabel={option =>\r\n            typeof option === \"string\" ? option : option.description\r\n          }\r\n          filterOptions={x => x}\r\n          options={this.state.options}\r\n          autoComplete\r\n          includeInputInList\r\n          freeSolo\r\n          disableOpenOnFocus\r\n          renderInput={params => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Add a location\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={throttle(this.handleChange, 500)}\r\n            />\r\n          )}\r\n          renderOption={option => {\r\n            const matches =\r\n              option.structured_formatting.main_text_matched_substrings;\r\n            const parts = parse(\r\n              option.structured_formatting.main_text,\r\n              matches.map(match => [match.offset, match.offset + match.length])\r\n            );\r\n\r\n            return (\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item>\r\n                  <LocationOnIcon />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  {parts.map((part, index) => (\r\n                    <span\r\n                      key={index}\r\n                      style={{ fontWeight: part.highlight ? 700 : 400 }}\r\n                    >\r\n                      {part.text}\r\n                    </span>\r\n                  ))}\r\n\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {option.structured_formatting.secondary_text}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","//@flow\r\n\r\nimport React from 'react';\r\nimport PriceEstimator from '../components/PriceEstimator'\r\nimport { Typography, IconButton, Button, Input, Paper } from '@material-ui/core';\r\nimport GoogleMapsAutoComplete from '../components/GoogleMapsAutoComplete'\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\n\r\ntype State = {\r\n    from: string,\r\n    to: string,\r\n    destination: string,\r\n    origin: string,\r\n    cost: number,\r\n    showMap: boolean,\r\n}\r\n\r\ntype Props = {\r\n}\r\n\r\nclass GasMoney extends React.Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            from: \"\",\r\n            to: \"\",\r\n            destination: \"\",\r\n            origin: \"\",\r\n            cost: 0,\r\n            showMap: false,\r\n        };\r\n    }\r\n    getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                console.log(position);\r\n            });\r\n        }\r\n    }\r\n    calculatePrice = () => {\r\n\r\n    }\r\n    updateMap = () => {\r\n        const {from, to} = this.state;\r\n        this.setState({origin: from, destination: to});\r\n    }\r\n    afterDirections = () => {\r\n        this.setState({origin: \"\", destination: \"\"})\r\n    }\r\n\r\n    render() {\r\n        //const {classes} = this.props;\r\n        const {from, to,origin, destination, cost} = this.state;\r\n        \r\n        return (\r\n            <>\r\n            <Paper>\r\n            <Typography>Gas Money</Typography>\r\n            <form>\r\n                <GoogleMapsAutoComplete />\r\n                <IconButton><MyLocationIcon/></IconButton>\r\n                \r\n                <br />\r\n                <Input onChange={(event) => this.setState({to: event.target.value})} placeholder=\"To\" />\r\n                <IconButton><MyLocationIcon/></IconButton>\r\n                \r\n                <br />\r\n                <Button onClick={() => this.updateMap()}>Calculate Price</Button>\r\n            </form>\r\n            <Button onClick={() => this.getLocation()}>Get Location</Button>\r\n            <p>{`cost: ${cost}`}</p>\r\n            <div id=\"mapSomething\" style={{height: \"800px\"}}>\r\n            <PriceEstimator from={origin} to={destination} AfterDirectionFetch={this.afterDirections}/>\r\n            </div>\r\n            </Paper>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GasMoney;\r\n","//@flow\nimport React from 'react';\nimport {Route, Link, Switch, BrowserRouter as Router, withRouter} from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport aboutMe from './pages/aboutMe';\nimport Landing from './pages/landing';\nimport GasMoney from './pages/gasMoney';\n\nfunction App() {\n  \n  return (  \n\n   <Router> \n    <Navigation />\n    <Switch>\n    <Route exact path='/' component={withRouter(Landing)} />\n    <Route path='/About' component={withRouter(aboutMe)} />\n    <Route path='/Gas' component={withRouter(GasMoney)} />\n    \n    </Switch>\n    </Router>\n  );\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <>\n    <App />\n    </>,\n    \n     document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}