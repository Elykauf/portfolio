{"version":3,"sources":["routes.js","components/Navigation.js","components/CollapseableText.js","components/ExperienceHeader.js","pages/aboutMe.js","pages/landing.js","components/PriceEstimator.js","components/GoogleMapsAutoComplete.js","pages/gasMoney.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["routes","home","resume","projects","gas","navOptions","Navigation","props","handleMenu","setState","isNavOpen","handleClose","handleNav","page","getIcon","index","style","color","green","getRoute","console","log","state","anchorElement","this","classes","history","className","root","AppBar","position","SwipeableDrawer","open","onClose","onOpen","ClickAwayListener","onClickAway","list","role","onClick","onKeyDown","List","map","text","ListItem","button","key","push","ListItemIcon","ListItemText","primary","Toolbar","IconButton","edge","menuButton","aria-label","Typography","componenet","variant","title","React","Component","withRouter","withStyles","theme","flexGrow","width","marginRight","spacing","CollapsableText","Props","useState","In","setIn","Grid","component","Box","fontWeight","label","Container","marginLeft","Collapse","in","children","ExperienceHeader","direction","justify","alignItems","container","item","noBold","JobTitle","Date","Resume","maxWidth","margin","alignContent","CollapseableText","Divider","useStyles","makeStyles","marginTop","marginBottom","fontSize","pos","Landing","Paper","elevation","display","height","justifyContent","Card","CardContent","CardActions","Button","PriceEstimator","calculateCost","directions","response","cost","miles","legs","distance","value","toFixed","time","duration","parseInt","directionsCallback","newResponse","status","AfterDirectionFetch","from","to","showMap","id","center","lat","lng","long","zoom","mapContainerStyle","options","destination","origin","travelMode","callback","autocompleteService","current","icon","palette","secondary","GoogleMapsAutoComplete","inputValue","setInputValue","setOptions","window","google","maps","places","AutocompleteService","handleChange","event","target","fetch","useMemo","throttle","input","getPlacePredictions","useEffect","active","results","optionDict","option","place_id","description","structured_formatting","Autocomplete","getOptionLabel","debug","freeSolo","onChange","newValue","onOptionSelect","renderInput","params","TextField","fullWidth","renderOption","matches","main_text_matched_substrings","parts","parse","main_text","match","offset","length","xs","part","highlight","secondary_text","GasMoney","getLocation","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","updateMap","fromLoc","toLoc","org","dest","afterDirections","setFrom","newVal","setFromCoords","place","requestUrl","then","json","data","result","geometry","location","catch","error","setTo","setToCoords","componentDidMount","document","querySelector","handleSubmit","preventDefault","stlye","textAlign","size","createMuiTheme","App","googleMapsApiKey","libraries","ThemeProvider","path","exact","aboutMe","Boolean","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"4eAOeA,EAPA,CACbC,KAAM,IACNC,OAAQ,UACRC,SAAU,YACVC,IAAK,Q,iBC6CDC,EAAa,CAAC,OAAQ,SAAU,WAAY,OAE5CC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAMRC,WAAa,WACX,EAAKC,SAAS,CAAEC,WAAW,KARV,EAUnBC,YAAc,WACZ,EAAKF,SAAS,CAAEC,WAAW,KAXV,EAanBE,UAAY,SAAAC,KAbO,EAiBnBC,QAAU,SAAAC,GACR,OAAc,IAAVA,EACK,kBAAC,IAAD,CAAkBC,MAAO,CAAEC,MAAOC,IAAM,QAC5B,IAAVH,EACF,kBAAC,IAAD,CAAyBC,MAAO,CAAEC,MAAOC,IAAM,QACnC,IAAVH,EACF,kBAAC,IAAD,CAAmBC,MAAO,CAAEC,MAAOC,IAAM,QAC7B,IAAVH,EACF,kBAAC,IAAD,CAA6BC,MAAO,CAAEC,MAAOC,IAAM,aADrD,GAxBU,EA4BnBC,SAAW,SAAAJ,GAET,OADAK,QAAQC,IAAI,QAASN,GACP,IAAVA,EACKf,EAAOC,KACK,IAAVc,EACFf,EAAOE,OACK,IAAVa,EACFf,EAAOG,SACK,IAAVY,EACFf,EAAOI,SADT,GAlCP,EAAKkB,MAAQ,CACXZ,WAAW,EACXa,cAAe,MAJA,E,sEAwCT,IAAD,SACsBC,KAAKjB,MAA1BkB,EADD,EACCA,QAASC,EADV,EACUA,QACThB,EAAcc,KAAKF,MAAnBZ,UAER,OACE,yBAAKiB,UAAS,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAASG,MACvB,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CACEC,KAAMtB,EACNuB,QAAS,aACTC,OAAQ,cAER,kBAACC,EAAA,EAAD,CAAmBC,YAAaZ,KAAKb,aACnC,yBACEgB,UAAS,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAASY,KACpBC,KAAK,eACLC,QAAS,kBAAM,EAAK5B,eACpB6B,UAAW,kBAAM,EAAK7B,gBAEtB,kBAAC8B,EAAA,EAAD,KACGpC,EAAWqC,KAAI,SAACC,EAAM5B,GAAP,OACd,kBAAC6B,EAAA,EAAD,CACEC,QAAM,EACNC,IAAKH,EACLJ,QAAS,kBAAMb,EAAQqB,KAAK,EAAK5B,SAASJ,MAE1C,kBAACiC,EAAA,EAAD,KAAe,EAAKlC,QAAQC,IAC5B,kBAACkC,EAAA,EAAD,CAAcC,QAASP,WApBnC,MA4BA,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLd,QAASf,KAAKhB,WACdmB,UAAS,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAS6B,WACpBrC,MAAM,UACNsC,aAAW,QAEX,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CACEC,WAAY,OACZC,QAAQ,KACR/B,UAAS,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAASkC,OAHtB,yB,GAtFaC,IAAMC,WAoGhBC,cAAWC,aArHX,SAAAC,GAAK,MAAK,CACvBpC,KAAM,CACJqC,SAAU,GAEZ5B,KAAM,CACJ6B,MAAO,KAETZ,WAAY,CACVa,YAAaH,EAAMI,QAAQ,IAE7BT,MAAO,CACLM,SAAU,MA0GYF,CAAmBzD,I,uFCpH9B+D,EApBS,SAAAC,GAAU,IAAD,EACXC,mBAAS,GADE,mBACxBC,EADwB,KACpBC,EADoB,KAG/B,OACE,kBAACC,EAAA,EAAD,KACE,kBAAClB,EAAA,EAAD,CAAYmB,UAAW,OACrB,kBAACC,EAAA,EAAD,CAAK3D,MAAO,eAAgB4D,WAAW,kBACrC,kBAACzB,EAAA,EAAD,CAAYb,QAAS,kBAAMkC,EAAa,IAAPD,EAAW,EAAI,KAC7CA,EAAK,kBAAC,IAAD,MAA0B,kBAAC,IAAD,OAEjCF,EAAMQ,QAGX,kBAACC,EAAA,EAAD,CAAW/D,MAAO,CAAEgE,WAAY,MAC9B,kBAACC,EAAA,EAAD,CAAUC,GAAW,IAAPV,GAAWF,EAAMa,aCHxBC,EArBU,SAACd,GACxB,OACE,kBAACI,EAAA,EAAD,CACEW,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXC,WAAS,GAET,kBAACd,EAAA,EAAD,CAAMe,MAAI,GACR,kBAACb,EAAA,EAAD,CAAKC,WAAYP,EAAMoB,OAAS,GAAK,kBAEjCpB,EAAMqB,WAIZ,kBAACjB,EAAA,EAAD,CAAMe,MAAI,GACR,kBAACb,EAAA,EAAD,CAAKC,WAAYP,EAAMoB,OAAS,GAAK,kBAAmBpB,EAAMsB,SCsJvDC,G,iLA/JX,OACE,kBAACd,EAAA,EAAD,CAAWe,SAAS,KAAK9E,MAAO,CAAE+E,OAAQ,GAAIC,aAAc,WAC1D,kBAACC,EAAD,CAAkBnB,MAAO,aAErB,2JAGJ,kBAACoB,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,MACA,kBAACD,EAAD,CAAkBnB,MAAO,aAEnB,oCACF,kBAAC,EAAD,CACEa,SACE,6DAEFC,KAAM,kBACNF,QAAM,IACP,6CAIL,kBAACQ,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,MACA,kBAACD,EAAD,CAAkBnB,MAAO,aACtB,qCAEH,kBAACoB,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,MACA,kBAACD,EAAD,CAAkBnB,MAAO,cACtB,yDAEH,kBAACoB,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,MACA,kBAACD,EAAD,CAAkBnB,MAAO,cACvB,oCACE,kBAAC,EAAD,CACEa,SACE,6EAEFC,KAAM,kBAER,4BACE,sHAKF,kBAACM,EAAA,EAAD,MACA,kBAAC,EAAD,CACEP,SACE,wEAEFC,KAAM,kBAER,4BACE,2FAGA,kHAKF,kBAACM,EAAA,EAAD,MACA,kBAAC,EAAD,CACEP,SAAU,+BACVC,KAAM,mBAER,4BACE,wHAKF,kBAACM,EAAA,EAAD,MACA,kBAAC,EAAD,CACEP,SAAU,wCACVC,KAAM,SAER,4BACE,6HAKF,kBAACM,EAAA,EAAD,MACA,kBAAC,EAAD,CACEP,SAAU,mDACVC,KAAM,kBAER,4BACE,gKAKA,4NAKA,qJAIA,gIAIA,0JAON,kBAACM,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,MACA,kBAACD,EAAD,CAAkBnB,MAAO,UACvB,kBAACJ,EAAA,EAAD,CACEW,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXC,WAAS,GAET,kBAACd,EAAA,EAAD,CAAMe,MAAI,GACR,4BACE,+DACA,2DACA,oEAGJ,kBAACf,EAAA,EAAD,CAAMe,MAAI,GACR,4BACE,2CACA,4CACA,gDAGJ,kBAACf,EAAA,EAAD,CAAMe,MAAI,GACR,4BACE,0DAKR,kBAACS,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,MACA,kBAACD,EAAD,CAAkBnB,MAAO,oBAErB,6P,GAzJSlB,IAAMC,W,2DCMrBsC,GAAYC,aAAW,CAC3BxE,KAAM,CACJyE,UAAW,GACXC,aAAc,IAEhB3C,MAAO,CACL4C,SAAU,IAEZC,IAAK,CACHF,aAAc,MA6FHG,GAzFC,SAAAnC,GACd,IAAM7C,EAAU0E,KAChB,OACE,oCACE,kBAACpB,EAAA,EAAD,CAAWe,SAAU,MACnB,kBAACY,GAAA,EAAD,CAAOC,UAAW,GAChB,kBAAC/B,EAAA,EAAD,CACEgC,QAAQ,OACRC,OAAQ,GACRtB,WAAW,SACXuB,eAAe,UAEf,kBAACtD,EAAA,EAAD,8CAEF,kBAACoB,EAAA,EAAD,CAAKgC,QAAQ,OAAOrB,WAAW,SAASuB,eAAe,UACrD,kBAACtD,EAAA,EAAD,kFAKF,kBAACuB,EAAA,EAAD,CAAWb,MAAM,MACf,kBAACQ,EAAA,EAAD,CAAMW,UAAU,SAASG,WAAS,EAACF,QAAQ,UACzC,kBAACZ,EAAA,EAAD,CAAMe,MAAI,GACR,kBAACsB,GAAA,EAAD,CAAMpF,UAAWF,EAAQG,KAAM8B,QAAQ,YACrC,kBAACsD,GAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CACEC,WAAY,iBACZ+B,QAAQ,OACRrB,WAAW,SACXuB,eAAe,UAEf,kBAACtD,EAAA,EAAD,CAAY7B,UAAWF,EAAQkC,OAC5B,WAGL,kBAACH,EAAA,EAAD,2DAKF,kBAACyD,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACExD,QAAQ,YACRnB,QAAS,kBAAM+B,EAAM5C,QAAQqB,KAAK,YAClC9B,MAAM,WAHR,aAUN,kBAACyD,EAAA,EAAD,CAAMe,MAAI,GACR,kBAACsB,GAAA,EAAD,CAAMpF,UAAWF,EAAQG,KAAM8B,QAAQ,YACrC,kBAACsD,GAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CACEC,WAAY,iBACZ+B,QAAQ,OACRrB,WAAW,SACXuB,eAAe,UAEf,kBAACtD,EAAA,EAAD,CAAY7B,UAAWF,EAAQkC,OAC5B,cAGL,kBAACH,EAAA,EAAD,mIAMF,kBAACyD,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACExD,QAAQ,YACRnB,QAAS,kBAAM+B,EAAM5C,QAAQqB,KAAK,SAClC9B,MAAM,WAHR,uBCSLkG,G,YA9Eb,WAAY5G,GAAe,IAAD,8BACxB,4CAAMA,KAKR6G,cAAgB,WACd,IAAMC,EAAa,EAAK/F,MAAMgG,SAC1BC,EAAO,EACX,GAAIF,EAAY,CAChB,IAAMG,GAASH,EAAWrH,OAAO,GAAKyH,KAAK,GAAGC,SAASC,MAAQ,IAAO,SAAUC,QAAQ,GAClFC,GAAQR,EAAWrH,OAAO,GAAKyH,KAAK,GAAGK,SAASH,MAAQ,IAAIC,QAAQ,GAC1EL,EAAQ,IAAOQ,SAASP,GAAS,GAAMO,SAASF,GAAQ,EAExD,OAAON,EAAKK,QAAQ,IAdI,EAgB1BI,mBAAqB,SAACC,GACpB,IAAIV,EAAO,EACS,OAAhBU,IACyB,OAAvBA,EAAYC,OACd,EAAKzH,SAAS,CAAE6G,SAAUW,IAAe,kBAAMV,EAAO,EAAKH,mBAE3DhG,QAAQC,IAAI,aAAc4G,IAI9B,EAAK1H,MAAM4H,oBAAoBZ,IAxB/B,EAAKjG,MAAQ,CACXgG,SAAU,MAHY,E,sEA4BhB,IAAD,EACuB9F,KAAKjB,MAA3B6H,EADD,EACCA,KAAMC,EADP,EACOA,GAAIC,EADX,EACWA,QACZjB,EAAa7F,KAAKF,MAAMgG,SAE9B,OACE,oCACED,GACE,kBAACzC,EAAA,EAAD,CAAKgC,QAAQ,OAAOC,OAAO,KAAKtB,WAAW,SAASuB,eAAe,UACnE,kBAAC/B,EAAA,EAAD,KACE,kBAACvB,EAAA,EAAD,CAAYE,QAAQ,SAApB,iBAAuC2D,EAAWrH,OAAO,GAAKyH,KAAK,GAAGC,SAAS/E,QAE/E,kBAACoC,EAAA,EAAD,KACA,kBAACvB,EAAA,EAAD,CAAYE,QAAQ,SAApB,gBAAsC2D,EAAWrH,OAAO,GAAKyH,KAAK,GAAGK,SAASnF,SAInF,kBAACiC,EAAA,EAAD,CAAKgC,QAAQ,OAAOC,OAAO,MAAMtB,WAAW,SAASuB,eAAe,UACjE,kBAAC,IAAD,CACEyB,GAAG,cACHC,OAAQ,CACNC,IAAKjH,KAAKjB,MAAMkI,IAChBC,IAAKlH,KAAKjB,MAAMoI,MAElBC,KAAM,GACNC,kBAAmB,CAAE3E,MAAO,MAAO2C,OAAQ,UAEjC,KAATuB,GAAsB,KAAPC,GAAaC,GAC3B,kBAAC,IAAD,CACEQ,QAAS,CACPC,YAAaV,EACbW,OAAQZ,EACRa,WAAY,WAEdC,SAAU1H,KAAKwG,qBAGH,OAAfX,GACC,kBAAC,IAAD,CACEyB,QAAS,CACPzB,WAAYA,Y,GApEDzD,IAAMC,W,gFCjB7BsF,GAA2B,CAAEC,QAAS,MAEtCjD,GAAYC,cAAW,SAAApC,GAAK,MAAK,CACrCqF,KAAM,CACJpI,MAAO+C,EAAMsF,QAAQ3G,KAAK4G,UAC1BpF,YAAaH,EAAMI,QAAQ,QA8GhBoF,OArGf,SAAgCjJ,GAC9B,IAAMkB,EAAU0E,KAD4B,EAERvC,IAAMW,SAAS,IAFP,mBAErCkF,EAFqC,KAEzBC,EAFyB,OAGd9F,IAAMW,SAAS,IAHD,mBAGrCuE,EAHqC,KAG5Ba,EAH4B,MAKvCR,GAAoBC,SAAWQ,OAAOC,SACvCV,GAAoBC,QAAU,IAAIQ,OAAOC,OAAOC,KAAKC,OAAOC,qBAEhE,IAAMC,EAAe,SAAAC,GACnBR,EAAcQ,EAAMC,OAAOxC,QAGvByC,EAAQxG,IAAMyG,SAClB,kBACEC,MAAS,SAACC,EAAOrB,GACfC,GAAoBC,QAAQoB,oBAAoBD,EAAOrB,KACtD,OACL,IAGFtF,IAAM6G,WAAU,WACd,IAAIC,GAAS,EAKb,IAHKvB,GAAoBC,SAAWQ,OAAOC,SACzCV,GAAoBC,QAAU,IAAIQ,OAAOC,OAAOC,KAAKC,OAAOC,qBAEzDb,GAAoBC,QAAzB,CAIA,GAAmB,KAAfK,EAWJ,OANAW,EAAM,CAAEG,MAAOd,IAAc,SAAAkB,GACvBD,GACFf,EAAWgB,GAAW,OAInB,WACLD,GAAS,GAXTf,EAAW,OAaZ,CAACF,EAAYW,IAEhB,IAAIQ,EAAa9B,EAAQpG,KAAI,SAAAmI,GAAM,MAAI,CAACA,EAAOC,SAAUD,EAAOE,YAAaF,EAAOG,0BACpF,OACE,kBAACC,GAAA,EAAD,CACE1C,GAAI,QAAUhI,EAAMuE,MACpBgE,QAAS8B,EACTM,eAAgB,SAAAL,GAAM,MAAsB,kBAAXA,EAAsBA,EAASA,EAAO,IACvEM,OAAK,EACLC,UAAQ,EACRpK,MAAO,CAACkD,MAAO,KACfyD,MAAO8B,EACP4B,SAAU,SAACnB,EAAOoB,GACZA,IACJ/K,EAAMgL,eAAeD,EAAS,IAC9B5B,EAAc4B,KAGhBE,YAAa,SAAAC,GAAM,OACjB,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEE3G,MAAOvE,EAAMuE,MACbpB,QAAQ,WACR2H,SAAUpB,EACV0B,WAAS,MAGbC,aAAc,SAACf,EAAQ9J,GACrB,IAAM8K,EAAUhB,EAAO,GAAGiB,6BACpBC,EAAQC,KACZnB,EAAO,GAAGoB,UACVJ,EAAQnJ,KAAI,SAAAwJ,GAAK,MAAI,CAACA,EAAMC,OAAQD,EAAMC,OAASD,EAAME,YAG3D,OACE,kBAAC1H,EAAA,EAAD,CAAMc,WAAS,EAACD,WAAW,UACzB,kBAACb,EAAA,EAAD,CAAMe,MAAI,GACR,kBAAC,KAAD,CAAgB9D,UAAWF,EAAQ4H,QAErC,kBAAC3E,EAAA,EAAD,CAAMe,MAAI,EAAC4G,IAAE,GACVN,EAAMrJ,KAAI,SAAC4J,EAAMvL,GAAP,OACT,0BAAM+B,IAAK/B,EAAOC,MAAO,CAAE6D,WAAYyH,EAAKC,UAAY,IAAM,MAC3DD,EAAK3J,SAIV,kBAACa,EAAA,EAAD,CAAYE,QAAQ,QAAQzC,MAAM,iBAC/B4J,EAAO,GAAG2B,sBCiHZC,G,YApMb,WAAYlM,GAAe,IAAD,8BACxB,4CAAMA,KAHR4I,oBAAsB,CAAEC,QAAS,MAEP,EAe1BsD,YAAc,WACRC,UAAUC,aACZD,UAAUC,YAAYC,oBAAmB,SAAA/K,GACvC,EAAKrB,SAAS,CACZgI,IAAK3G,EAASgL,OAAOC,SACrBpE,KAAM7G,EAASgL,OAAOE,gBApBJ,EAyB1BC,UAAY,WAAO,IAAD,EACqB,EAAK3L,MAAlC8G,EADQ,EACRA,KAAMC,EADE,EACFA,GAAI6E,EADF,EACEA,QAASC,EADX,EACWA,MACrBC,EAAMF,GAAoB9E,EAC1BiF,EAAOF,GAAgB9E,EAC7BjH,QAAQC,IAAI+L,EAAKC,GAEjB,EAAK5M,SAAS,CACZuI,OAAQoE,EACRrE,YAAasE,EACb/E,SAAS,KAlCa,EAqC1BgF,gBAAkB,SAAC/F,GACjB,EAAK9G,SAAS,CAAEuI,OAAQ,GAAID,YAAa,GAAIxB,UAtCrB,EAwC1BgG,QAAU,SAACC,GACT,EAAK/M,SAAS,CAAE2H,KAAMoF,KAzCE,EA2C1BC,cAAgB,SAACC,GACf,IACMC,EAAU,2EAAuED,EAAvE,qEAEhBtD,MAHiB,uCAGAuD,GACdC,MAAK,SAAAtG,GACJ,OAAOA,EAASuG,UAEjBD,MAAK,SAAAE,GACJ,EAAKrN,SAAS,CAAEyM,QAASY,EAAKC,OAAOC,SAASC,cAE/CC,OAAM,SAAAC,GACL,OAAOA,MAvDa,EA0D1BC,MAAQ,SAACZ,GACP,EAAK/M,SAAS,CAAE4H,GAAImF,KA3DI,EA6D1Ba,YAAc,SAACX,GACb,IACMC,EAAU,2EAAuED,EAAvE,qEAEhBtD,MAHiB,uCAGAuD,GACdC,MAAK,SAAAtG,GACJ,OAAOA,EAASuG,UAEjBD,MAAK,SAAAE,GAEFA,GACAA,EAAKC,QACLD,EAAKC,OAAOC,UACZF,EAAKC,OAAOC,SAASC,UAErB,EAAKxN,SAAS,CAAE0M,MAAOW,EAAKC,OAAOC,SAASC,cAG/CC,OAAM,SAAAC,GACL,OAAOA,MAhFa,EAmF1BG,kBAAoB,WAClB,EAAK5B,cACiB,qBAAX9C,SACJ2E,SAASC,cAAc,mBACrB,EAAKrF,oBAAoBC,SAAWQ,OAAOC,SAC9C,EAAKV,oBAAoBC,QAAU,IAAIQ,OAAOC,OAAOC,KAAKC,OAAOC,qBAE9D,EAAKb,oBAAoBC,SAC5BhI,QAAQC,IAAI,yBA3FM,EAgG1BoN,aAAe,SAACvE,GACA,OAAVA,IACF9I,QAAQC,IAAI,0BAA2B6I,GACvCA,EAAMwE,mBAjGR,EAAKpN,MAAQ,CACX8G,KAAM,GACNC,GAAI,GACJ6E,QAAS,KACTC,MAAO,KACPpE,YAAa,GACbC,OAAQ,GACRzB,KAAM,EACNkB,IAAK,EACLE,KAAM,EACNL,SAAS,GAZa,E,sEAsGhB,IAAD,SAE2C9G,KAAKF,MAA9C0H,EAFF,EAEEA,OAAQD,EAFV,EAEUA,YAAaxB,EAFvB,EAEuBA,KAAMkB,EAF7B,EAE6BA,IAAKE,EAFlC,EAEkCA,KAEzC,OACE,oCACE,kBAAC5D,EAAA,EAAD,CAAWe,SAAU,KAAM6I,MAAO,CAAEC,UAAW,WAC7C,kBAAC7J,EAAA,EAAD,CAAWe,SAAU,MACnB,kBAACpB,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CACEgC,QAAQ,OACRC,OAAQ,GACRtB,WAAW,SACXuB,eAAe,UAEf,kBAACtD,EAAA,EAAD,mBAEF,kBAACuD,GAAA,EAAD,KACE,6BACA,8BACE,kBAAChC,EAAA,EAAD,KACE,kBAACH,EAAA,EAAD,CACEgC,QAAQ,OACRC,OAAQ,GACRtB,WAAW,SACXuB,eAAe,UAEf,kBAAC,GAAD,CACEyE,eAAgB/J,KAAKiM,cACrB3I,MAAO,UAGX,6BACA,kBAACF,EAAA,EAAD,CACEgC,QAAQ,OACRC,OAAQ,GACRtB,WAAW,SACXuB,eAAe,UAEf,kBAAC,GAAD,CACEyE,eAAgB/J,KAAK6M,YACrBvJ,MAAO,SAIb,6BACA,kBAACF,EAAA,EAAD,CACEgC,QAAQ,OACRC,OAAQ,GACRtB,WAAW,SACXuB,eAAe,UAEf,kBAACI,GAAA,EAAD,CACE2H,KAAK,SACLnL,QAAQ,YACRzC,MAAM,UACNsB,QAAS,kBAAM,EAAK0K,cAJtB,qBAUJ,8BAEF,6BACA,kBAAClI,EAAA,EAAD,CAAWe,SAAU,MACnB,kBAACY,GAAA,EAAD,KACE,kBAAC9B,EAAA,EAAD,CACEgC,QAAQ,OACRC,OAAO,KACPtB,WAAW,SACXuB,eAAe,UAEL,IAATS,GAAc,kBAAC/D,EAAA,EAAD,qBAAsB+D,KAEvC,kBAAC,GAAD,CACEa,KAAMY,EACNX,GAAIU,EACJN,IAAKA,EACLE,KAAMA,EACNL,SAAO,EACPH,oBAAqB3G,KAAK8L,kBAE5B,uC,GA5LK1J,IAAMC,W,6BClBdG,GAXD8K,aAAe,CAC3BxF,QAAS,CACPpG,QAAShC,KACTqI,UAAWrI,MAEbyB,KAAM,CACFO,QAAShC,KACTqI,UAAWrI,QCgCF6N,OAxBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACExG,GAAG,gBACHyG,iBAAiB,0CACjBC,UAAW,CAAC,WAEZ,kBAACC,EAAA,EAAD,CAAelL,MAAOA,IACpB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmL,KAAMnP,EAAOI,IAAKuE,UAAW8H,KACpC,kBAAC,IAAD,CAAO2C,OAAK,EAACD,KAAMnP,EAAOC,KAAM0E,UAAW8B,KAC3C,kBAAC,IAAD,CAAO0I,KAAMnP,EAAOE,OAAQyE,UAAW0K,KACvC,kBAAC,IAAD,CAAOF,KAAMnP,EAAOG,UACpB,kBAAC,IAAD,CAAUkI,GAAIrI,EAAOC,aCrBbqP,QACW,cAA7B1F,OAAOqE,SAASsB,UAEe,UAA7B3F,OAAOqE,SAASsB,UAEhB3F,OAAOqE,SAASsB,SAASrD,MACvB,2DCZNsD,IAASC,OACL,oCACA,kBAAC,GAAD,OAGClB,SAASmB,eAAe,SDwHvB,kBAAmB/C,WACrBA,UAAUgD,cAAcC,MAAMhC,MAAK,SAAAiC,GACjCA,EAAaC,kB","file":"static/js/main.37a059e3.chunk.js","sourcesContent":["const routes = {\r\n  home: \"/\",\r\n  resume: \"/resume\",\r\n  projects: \"/projects\",\r\n  gas: \"/gas\",\r\n}\r\n\r\nexport default routes;","//@flow\r\n\r\nimport React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Toolbar,\r\n  SwipeableDrawer,\r\n  AppBar,\r\n  Typography,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport LocalGasStationOutlinedIcon from \"@material-ui/icons/LocalGasStationOutlined\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport routes from \"../routes\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\n\r\ntype State = {\r\n  isNavOpen: boolean\r\n};\r\n\r\ntype Props = {\r\n  classes?: any,\r\n  history: Array<any>\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  list: {\r\n    width: 250\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\nconst navOptions = [\"Home\", \"Resume\", \"Projects\", \"Gas\"];\r\n\r\nclass Navigation extends React.Component<Props, State> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      anchorElement: null\r\n    };\r\n  }\r\n  handleMenu = () => {\r\n    this.setState({ isNavOpen: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ isNavOpen: false });\r\n  };\r\n  handleNav = page => {\r\n    //this.props.history.push(page);\r\n    //this.setState({anchorElement: null, isNavOpen: false});\r\n  };\r\n  getIcon = index => {\r\n    if (index === 0) {\r\n      return <HomeOutlinedIcon style={{ color: green[500] }} />;\r\n    } else if (index === 1) {\r\n      return <DescriptionOutlinedIcon style={{ color: green[500] }} />;\r\n    } else if (index === 2) {\r\n      return <BuildOutlinedIcon style={{ color: green[500] }} />;\r\n    } else if (index === 3) {\r\n      return <LocalGasStationOutlinedIcon style={{ color: green[500] }} />;\r\n    }\r\n  };\r\n  getRoute = index => {\r\n    console.log(\"index\", index);\r\n    if (index === 0) {\r\n      return routes.home;\r\n    } else if (index === 1) {\r\n      return routes.resume;\r\n    } else if (index === 2) {\r\n      return routes.projects;\r\n    } else if (index === 3) {\r\n      return routes.gas;\r\n    }\r\n  };\r\n  render() {\r\n    const { classes, history } = this.props;\r\n    const { isNavOpen } = this.state;\r\n\r\n    return (\r\n      <div className={classes?.root}>\r\n        <AppBar position=\"static\">\r\n          <SwipeableDrawer\r\n            open={isNavOpen}\r\n            onClose={() => {}}\r\n            onOpen={() => {}}\r\n          >\r\n            <ClickAwayListener onClickAway={this.handleClose}>\r\n              <div\r\n                className={classes?.list}\r\n                role=\"presentation\"\r\n                onClick={() => this.handleClose()}\r\n                onKeyDown={() => this.handleClose()}\r\n              >\r\n                <List>\r\n                  {navOptions.map((text, index) => (\r\n                    <ListItem\r\n                      button\r\n                      key={text}\r\n                      onClick={() => history.push(this.getRoute(index))}\r\n                    >\r\n                      <ListItemIcon>{this.getIcon(index)}</ListItemIcon>\r\n                      <ListItemText primary={text} />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </div>\r\n            </ClickAwayListener>\r\n            );\r\n          </SwipeableDrawer>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              onClick={this.handleMenu}\r\n              className={classes?.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              componenet={\"span\"}\r\n              variant=\"h6\"\r\n              className={classes?.title}\r\n            >\r\n              Elijah Kaufman\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Navigation));\r\n","//flow\r\nimport React, { useState } from \"react\";\r\n\r\nimport {\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n  Collapse,\r\n  Container,\r\n  Box\r\n} from \"@material-ui/core\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport { palette } from '@material-ui/system';\r\n\r\nconst CollapsableText = Props => {\r\n  const [In, setIn] = useState(0);\r\n\r\n  return (\r\n    <Grid>\r\n      <Typography component={'div'}>\r\n        <Box color={\"primary.main\"} fontWeight=\"fontWeightBold\">\r\n          <IconButton onClick={() => setIn(In === 0 ? 1 : 0)}>\r\n            {In ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n          {Props.label}\r\n        </Box>\r\n      </Typography>\r\n      <Container style={{ marginLeft: 120 }}>\r\n        <Collapse in={In === 0}>{Props.children}</Collapse>\r\n      </Container>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CollapsableText;\r\n","//flow\r\nimport React from \"react\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\n\r\n\r\nconst ExperienceHeader = (Props) => {\r\n  return (\r\n    <Grid\r\n      direction=\"row\"\r\n      justify=\"space-between\"\r\n      alignItems=\"flex-Start\"\r\n      container\r\n    >\r\n      <Grid item>\r\n        <Box fontWeight={Props.noBold ? \"\" : \"fontWeightBold\"}>\r\n          {\r\n            Props.JobTitle\r\n          }\r\n        </Box>\r\n      </Grid>\r\n      <Grid item>\r\n        <Box fontWeight={Props.noBold ? \"\" : \"fontWeightBold\"}>{Props.Date}</Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ExperienceHeader;","//@flow\r\n\r\nimport React from \"react\";\r\nimport { Divider, Container, Paper, Grid, Box } from \"@material-ui/core\";\r\nimport CollapseableText from \"../components/CollapseableText\";\r\nimport ExperienceHeader from \"../components/ExperienceHeader\";\r\ntype State = {};\r\n\r\ntype Props = {};\r\n\r\nclass Resume extends React.Component<Props, State> {\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"xl\" style={{ margin: 10, alignContent: \"Center\" }}>\r\n        <CollapseableText label={\"Objective\"}>\r\n          {\r\n            \"Seeking a software engineering position to advance my skills in software development while delivering high quality software specific to customer needs.\"\r\n          }\r\n        </CollapseableText>\r\n        <Divider />\r\n        <Divider />\r\n        <CollapseableText label={\"Education\"}>\r\n          {\r\n              <>\r\n            <ExperienceHeader\r\n              JobTitle={\r\n                \"Software Engineering, Arizona State University Polytechnic\"\r\n              }\r\n              Date={\"(GPA: 3.47/4.0)\"}\r\n              noBold/>\r\n            {\"Focus in Applied Business Data Analytics\"}\r\n            </>\r\n          }\r\n        </CollapseableText>\r\n        <Divider />\r\n        <Divider />\r\n        <CollapseableText label={\"Languages\"}>\r\n          {\"Javascript, Java, Python, C++, C#\"}\r\n        </CollapseableText>\r\n        <Divider />\r\n        <Divider />\r\n        <CollapseableText label={\"Frameworks\"}>\r\n          {\"Node.js, React.js, Tensorflow, Git, Linux, AWS, Azure\"}\r\n        </CollapseableText>\r\n        <Divider />\r\n        <Divider />\r\n        <CollapseableText label={\"Experience\"}>\r\n          <>\r\n            <ExperienceHeader\r\n              JobTitle={\r\n                \"Axon, Record Management System Software Engineering Intern, Scottsdale, AZ\"\r\n              }\r\n              Date={\"5/2019-8/2019\"}\r\n            />\r\n            <ul>\r\n              <li>\r\n                Helped build out Axon Records page to help customers better\r\n                support and manage system\r\n              </li>\r\n            </ul>\r\n            <Divider />\r\n            <ExperienceHeader\r\n              JobTitle={\r\n                \"Algorithmic Intuition, Software Engineering Intern, Mountain View, CA\"\r\n              }\r\n              Date={\"2/2018-9/2018\"}\r\n            />\r\n            <ul>\r\n              <li>\r\n                Developed algorithms and tools for data processing pipeline\r\n              </li>\r\n              <li>\r\n                Converted exisiting data processing pipeline to experiemental\r\n                Tensorflow features\r\n              </li>\r\n            </ul>\r\n            <Divider />\r\n            <ExperienceHeader\r\n              JobTitle={\"Chegg, Tutor, Scottsdale, AZ\"}\r\n              Date={\"2/2017-12/2017\"}\r\n            />\r\n            <ul>\r\n              <li>\r\n                Helped college and high school students understand various\r\n                concepts in computer science\r\n              </li>\r\n            </ul>\r\n            <Divider />\r\n            <ExperienceHeader\r\n              JobTitle={\"Roambotics, Drone Engineer, Tempe, AZ\"}\r\n              Date={\"2016\"}\r\n            />\r\n            <ul>\r\n              <li>\r\n                Designed mechanics and software of a drone capable of autonomous\r\n                surveillance of a warehouse\r\n              </li>\r\n            </ul>\r\n            <Divider />\r\n            <ExperienceHeader\r\n              JobTitle={\"Chaparral Robotics FRC Team 3019, Scottsdale, AZ\"}\r\n              Date={\"1/2013-5/2016\"}\r\n            />\r\n            <ul>\r\n              <li>\r\n                Impelemented openCV code to allow robot to see the field and\r\n                goals which increased accuracy in shooting game objects to the\r\n                goal\r\n              </li>\r\n              <li>\r\n                Released software to the rest of the teams worldwide; there were\r\n                more then 18,000 views and downloads of this software. Several\r\n                teams used this software to win their regional competitions.\r\n              </li>\r\n              <li>\r\n                Coordinated the efforts of mechanical, electrical, and software\r\n                engineers to maximize the effectiveness of the robot.\r\n              </li>\r\n              <li>\r\n                Engaged and taught fellow students in robotics, software design,\r\n                and programming best practices.\r\n              </li>\r\n              <li>\r\n                Primary parts designer for the 3-D printer, ensuring that the\r\n                mechanical engineers had the necessary parts for success.\r\n              </li>\r\n            </ul>\r\n          </>\r\n        </CollapseableText>\r\n        <Divider />\r\n        <Divider />\r\n        <CollapseableText label={\"Skills\"}>\r\n          <Grid\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"flex-start\"\r\n            container\r\n          >\r\n            <Grid item>\r\n              <ul>\r\n                <li>Software Design and development</li>\r\n                <li>Strong communication skills</li>\r\n                <li>Ability to simplify complex issues</li>\r\n              </ul>\r\n            </Grid>\r\n            <Grid item>\r\n              <ul>\r\n                <li>Team player</li>\r\n                <li>Fast learner</li>\r\n                <li>Self-motivated</li>\r\n              </ul>\r\n            </Grid>\r\n            <Grid item>\r\n              <ul>\r\n                <li>Adaptable and Flexible</li>\r\n              </ul>\r\n            </Grid>\r\n          </Grid>\r\n        </CollapseableText>\r\n        <Divider />\r\n        <Divider />\r\n        <CollapseableText label={\"Relevant Courses\"}>\r\n          {\r\n            \" Web Applications and Mobile Systems, Design and Analysis of Data Structures, Software Enterprise, Business Data Visualization, Business Intelligence, Modern Differential Equations,  Discrete Mathematical Structures, Linear Algebra, Statistics \"\r\n          }\r\n        </CollapseableText>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","//@flow\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardActions,\r\n  CardContent\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: 15,\r\n    marginBottom: 15\r\n  },\r\n  title: {\r\n    fontSize: 20\r\n  },\r\n  pos: {\r\n    marginBottom: 20\r\n  }\r\n});\r\n\r\nconst Landing = Props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Container maxWidth={\"lg\"}>\r\n        <Paper elevation={1}>\r\n          <Box\r\n            display=\"flex\"\r\n            height={80}\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Typography>Welcome to Elijah Kaufman's Website!</Typography>\r\n          </Box>\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography>\r\n              Here you will find his resume, and some projects is currently\r\n              working on\r\n            </Typography>\r\n          </Box>\r\n          <Container width=\"md\">\r\n            <Grid direction=\"column\" container justify=\"center\">\r\n              <Grid item>\r\n                <Card className={classes.root} variant=\"outlined\">\r\n                  <CardContent>\r\n                    <Box\r\n                      fontWeight={\"fontWeightBold\"}\r\n                      display=\"flex\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"\r\n                    >\r\n                      <Typography className={classes.title}>\r\n                        {\"Resume\"}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography>\r\n                      Elijah kaufman's skills and past work experience.\r\n                    </Typography>\r\n                  </CardContent>\r\n\r\n                  <CardActions>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={() => Props.history.push(\"/resume\")}\r\n                      color=\"primary\"\r\n                    >\r\n                      Resume\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card className={classes.root} variant=\"outlined\">\r\n                  <CardContent>\r\n                    <Box\r\n                      fontWeight={\"fontWeightBold\"}\r\n                      display=\"flex\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"\r\n                    >\r\n                      <Typography className={classes.title}>\r\n                        {\"Gas Money\"}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography>\r\n                      Stuck? Need a ride? Use Elijah's rideshare service to\r\n                      schedule a ride today! Cost will be close to that of Uber\r\n                      and Lyft!\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={() => Props.history.push(\"/gas\")}\r\n                      color=\"primary\"\r\n                    >\r\n                      Learn More\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","//@flow\r\n\r\nimport React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  DirectionsService,\r\n  DirectionsRenderer\r\n} from \"@react-google-maps/api\";\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\n\r\n//{`Miles: ${(directions.routes['0'].legs[0].distance.value / 1000 * 0.621371).toFixed(2)}`}\r\n//{`Time: ${(directions.routes['0'].legs[0].duration.value / 60).toFixed(2)}`}\r\n\r\ntype State = {\r\n  response: any\r\n};\r\ntype Props = {\r\n  to: string,\r\n  from: string,\r\n  lat: number,\r\n  long: number,\r\n  showMap: boolean,\r\n  AfterDirectionFetch: (cost: number) => void\r\n};\r\n\r\nclass PriceEstimator extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      response: null\r\n    };\r\n  }\r\n  calculateCost = () => {\r\n    const directions = this.state.response;\r\n    let cost = 0;\r\n    if (directions) {\r\n    const miles = (directions.routes['0'].legs[0].distance.value / 1000 * 0.621371).toFixed(2)\r\n    const time = (directions.routes['0'].legs[0].duration.value / 60).toFixed(2)\r\n    cost = (0.35 * parseInt(miles) + 0.3 * parseInt(time) + 5.00);\r\n    }\r\n    return cost.toFixed(2);\r\n  }\r\n  directionsCallback = (newResponse: any) => {\r\n    let cost = 0;\r\n    if (newResponse !== null) {\r\n      if (newResponse.status === \"OK\") {\r\n        this.setState({ response: newResponse }, () => cost = this.calculateCost());\r\n      } else {\r\n        console.log(\"response: \", newResponse);\r\n      }\r\n    }\r\n    \r\n    this.props.AfterDirectionFetch(cost);\r\n  };\r\n  render() {\r\n    const { from, to, showMap } = this.props;\r\n    const directions = this.state.response;\r\n\r\n    return (\r\n      <>\r\n       {directions && (\r\n          <Box display=\"flex\" height=\"80\" alignItems=\"center\" justifyContent=\"center\">\r\n          <Container>\r\n            <Typography variant=\"body1\">{`Miles: ${directions.routes[\"0\"].legs[0].distance.text}`}</Typography>\r\n            </Container>\r\n            <Container>\r\n            <Typography variant=\"body1\">{`Time: ${directions.routes[\"0\"].legs[0].duration.text}`}</Typography>\r\n            </Container>\r\n            </Box>\r\n       )}\r\n       <Box display=\"flex\" height=\"420\" alignItems=\"center\" justifyContent=\"center\">\r\n          <GoogleMap\r\n            id=\"ElyGasMoney\"\r\n            center={{\r\n              lat: this.props.lat,\r\n              lng: this.props.long,\r\n            }}\r\n            zoom={12}\r\n            mapContainerStyle={{ width: \"95%\", height: \"400px\" }}\r\n          >\r\n            {from !== \"\" && to !== \"\" && showMap && (\r\n              <DirectionsService\r\n                options={{\r\n                  destination: to,\r\n                  origin: from,\r\n                  travelMode: \"DRIVING\"\r\n                }}\r\n                callback={this.directionsCallback}\r\n              />\r\n            )}\r\n            {directions !== null && (\r\n              <DirectionsRenderer\r\n                options={{\r\n                  directions: directions\r\n                }}\r\n              />\r\n            )}\r\n          </GoogleMap>\r\n          </Box>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PriceEstimator;\r\n","//@flow\r\n\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport throttle from 'lodash/throttle';\r\n\r\n\r\nconst autocompleteService: any = { current: null };\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  icon: {\r\n    color: theme.palette.text.secondary,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  label: string,\r\n  onOptionSelect: (place_id: string) => void,\r\n}\r\n\r\nfunction GoogleMapsAutoComplete(props: Props) {\r\n  const classes = useStyles();\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [options, setOptions] = React.useState([]);\r\n  \r\n  if (!autocompleteService.current && window.google) {\r\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\r\n  }\r\n  const handleChange = event => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const fetch = React.useMemo(\r\n    () =>\r\n      throttle((input, callback) => {\r\n        autocompleteService.current.getPlacePredictions(input, callback);\r\n      }, 400),\r\n    [],\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!autocompleteService.current && window.google) {\r\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\r\n    }\r\n    if (!autocompleteService.current) {\r\n      return undefined;\r\n    }\r\n\r\n    if (inputValue === '') {\r\n      setOptions([]);\r\n      return undefined;\r\n    }\r\n\r\n    fetch({ input: inputValue }, results => {\r\n      if (active) {\r\n        setOptions(results || []);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [inputValue, fetch]);\r\n\r\n  let optionDict = options.map(option => [option.place_id, option.description, option.structured_formatting])\r\n  return (\r\n    <Autocomplete\r\n      id={\"input\" + props.label}\r\n      options={optionDict}\r\n      getOptionLabel={option => typeof option === \"string\" ? option : option[1]}\r\n      debug\r\n      freeSolo\r\n      style={{width: 300}}\r\n      value={inputValue}\r\n      onChange={(event, newValue) => {\r\n        if (newValue) {\r\n        props.onOptionSelect(newValue[0]);\r\n        setInputValue(newValue)\r\n        }\r\n      }}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          label={props.label}\r\n          variant=\"outlined\"\r\n          onChange={handleChange}\r\n          fullWidth\r\n         />\r\n      )}\r\n      renderOption={(option, index) => {\r\n        const matches = option[2].main_text_matched_substrings;\r\n        const parts = parse(\r\n          option[2].main_text,\r\n          matches.map(match => [match.offset, match.offset + match.length]),\r\n        );\r\n\r\n        return (\r\n          <Grid container alignItems=\"center\">\r\n            <Grid item>\r\n              <LocationOnIcon className={classes.icon} />\r\n            </Grid>\r\n            <Grid item xs>\r\n              {parts.map((part, index) => (\r\n                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\r\n                  {part.text}\r\n                </span>\r\n              ))}\r\n\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                {option[2].secondary_text}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default GoogleMapsAutoComplete;","//@flow\r\n\r\nimport React from \"react\";\r\nimport PriceEstimator from \"../components/PriceEstimator\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  Box\r\n} from \"@material-ui/core\";\r\nimport GoogleMapsAutoComplete from \"../components/GoogleMapsAutoComplete\";\r\n\r\ntype State = {\r\n  from: string,\r\n  fromLoc: any | null,\r\n  to: string,\r\n  toLoc: any | null,\r\n  destination: string,\r\n  origin: string,\r\n  cost: number,\r\n  lat: number,\r\n  long: number,\r\n  showMap: boolean\r\n};\r\n\r\ntype Props = {\r\n  autocompleteService: any\r\n};\r\n\r\nclass GasMoney extends React.Component<Props, State> {\r\n  autocompleteService = { current: null };\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      from: \"\",\r\n      to: \"\",\r\n      fromLoc: null,\r\n      toLoc: null,\r\n      destination: \"\",\r\n      origin: \"\",\r\n      cost: 0,\r\n      lat: 0,\r\n      long: 0,\r\n      showMap: false\r\n    };\r\n  }\r\n  getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        this.setState({\r\n          lat: position.coords.latitude,\r\n          long: position.coords.longitude\r\n        });\r\n      });\r\n    }\r\n  };\r\n  updateMap = () => {\r\n    const { from, to, fromLoc, toLoc } = this.state;\r\n    const org = fromLoc ? fromLoc : from;\r\n    const dest = toLoc ? toLoc : to;\r\n    console.log(org, dest);\r\n\r\n    this.setState({\r\n      origin: org,\r\n      destination: dest,\r\n      showMap: true\r\n    });\r\n  };\r\n  afterDirections = (cost: number) => {\r\n    this.setState({ origin: \"\", destination: \"\", cost });\r\n  };\r\n  setFrom = (newVal: any) => {\r\n    this.setState({ from: newVal });\r\n  };\r\n  setFromCoords = (place: string) => {\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    const requestUrl = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${place}&fields=name,geometry&key=AIzaSyCmFG2_lNsVip681FctETIpGuqiFnABTCc`;\r\n\r\n    fetch(proxyurl + requestUrl)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({ fromLoc: data.result.geometry.location });\r\n      })\r\n      .catch(error => {\r\n        return error;\r\n      });\r\n  };\r\n  setTo = (newVal: any) => {\r\n    this.setState({ to: newVal });\r\n  };\r\n  setToCoords = (place: string) => {\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    const requestUrl = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${place}&fields=name,geometry&key=AIzaSyCmFG2_lNsVip681FctETIpGuqiFnABTCc`;\r\n\r\n    fetch(proxyurl + requestUrl)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (\r\n          data &&\r\n          data.result &&\r\n          data.result.geometry &&\r\n          data.result.geometry.location\r\n        ) {\r\n          this.setState({ toLoc: data.result.geometry.location });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        return error;\r\n      });\r\n  };\r\n  componentDidMount = () => {\r\n    this.getLocation();\r\n    if (typeof window !== \"undefined\") {\r\n      if (!document.querySelector(\"#google-maps\")) {\r\n        if (!this.autocompleteService.current && window.google) {\r\n          this.autocompleteService.current = new window.google.maps.places.AutocompleteService();\r\n        }\r\n        if (!this.autocompleteService.current) {\r\n          console.log(\"auto complete null\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  handleSubmit = (event: any | null) => {\r\n    if (event !== null) {\r\n      console.log(\"An essay was submitted:\", event);\r\n      event.preventDefault();\r\n    }\r\n  };\r\n  render() {\r\n    //const {classes} = this.props;\r\n    const {  origin, destination, cost, lat, long } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Container maxWidth={\"md\"} stlye={{ textAlign: \"center\" }}>\r\n          <Container maxWidth={\"sm\"}>\r\n            <Grid>\r\n              <Box\r\n                display=\"flex\"\r\n                height={60}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                <Typography>Gas Money</Typography>\r\n              </Box>\r\n              <Card>\r\n                <br />\r\n                <form>\r\n                  <Container>\r\n                    <Box\r\n                      display=\"flex\"\r\n                      height={80}\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"\r\n                    >\r\n                      <GoogleMapsAutoComplete\r\n                        onOptionSelect={this.setFromCoords}\r\n                        label={\"From\"}\r\n                      />\r\n                    </Box>\r\n                    <br />\r\n                    <Box\r\n                      display=\"flex\"\r\n                      height={80}\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"\r\n                    >\r\n                      <GoogleMapsAutoComplete\r\n                        onOptionSelect={this.setToCoords}\r\n                        label={\"To\"}\r\n                      />\r\n                    </Box>\r\n                  </Container>\r\n                  <br />\r\n                  <Box\r\n                    display=\"flex\"\r\n                    height={80}\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => this.updateMap()}\r\n                    >\r\n                      Calculate Price\r\n                    </Button>\r\n                  </Box>\r\n                </form>\r\n                <br />\r\n              </Card>\r\n              <br />\r\n              <Container maxWidth={\"sm\"}>\r\n                <Paper>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    height=\"80\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                  >\r\n                    {cost !== 0 && <Typography>{`cost: ${cost}`}</Typography>}\r\n                  </Box>\r\n                  <PriceEstimator\r\n                    from={origin}\r\n                    to={destination}\r\n                    lat={lat}\r\n                    long={long}\r\n                    showMap\r\n                    AfterDirectionFetch={this.afterDirections}\r\n                  />\r\n                  <br />\r\n                </Paper>\r\n              </Container>\r\n            </Grid>\r\n          </Container>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GasMoney;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport green from \"@material-ui/core/colors/green\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    secondary: green\r\n  },\r\n  text: {\r\n      primary: green,\r\n      secondary: green,\r\n  } \r\n});\r\n\r\nexport default theme;\r\n","//@flow\nimport React from \"react\";\nimport {\n  Route,\n  Switch,\n  BrowserRouter as Router,\n  Redirect,\n} from \"react-router-dom\";\nimport { LoadScript } from \"@react-google-maps/api\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport aboutMe from \"./pages/aboutMe\";\nimport Landing from \"./pages/landing\";\nimport GasMoney from \"./pages/gasMoney\";\nimport routes from \"./routes\";\nimport theme from \"./theme\";\n\nfunction App() {\n  return (\n    <Router>\n      <LoadScript\n        id=\"script-loader\"\n        googleMapsApiKey=\"AIzaSyCmFG2_lNsVip681FctETIpGuqiFnABTCc\"\n        libraries={[\"places\"]}\n      >\n        <ThemeProvider theme={theme}>\n          <Navigation />\n          <Switch>\n            <Route path={routes.gas} component={GasMoney} />\n            <Route exact path={routes.home} component={Landing} />\n            <Route path={routes.resume} component={aboutMe} />\n            <Route path={routes.projects}>\n            <Redirect to={routes.home} />\n            </Route>\n          </Switch>\n        </ThemeProvider>\n      </LoadScript>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <>\n    <App />\n    </>,\n    \n     document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}